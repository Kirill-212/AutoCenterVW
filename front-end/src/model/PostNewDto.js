/*
 * BackEndAutoCenterVw
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The PostNewDto model module.
 * @module model/PostNewDto
 * @version v1
 */
export class PostNewDto {
  /**
   * Constructs a new <code>PostNewDto</code>.
   * @alias module:model/PostNewDto
   * @class
   * @param title {String} 
   * @param description {String} 
   * @param email {String} 
   */
  constructor(title, description, email) {
    this.title = title;
    this.description = description;
    this.email = email;
  }

  /**
   * Constructs a <code>PostNewDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PostNewDto} obj Optional instance to populate.
   * @return {module:model/PostNewDto} The populated <code>PostNewDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PostNewDto();
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} title
 */
PostNewDto.prototype.title = undefined;

/**
 * @member {String} description
 */
PostNewDto.prototype.description = undefined;

/**
 * @member {String} email
 */
PostNewDto.prototype.email = undefined;

