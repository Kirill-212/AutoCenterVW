/*
 * BackEndAutoCenterVw
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {CarRepair} from '../model/CarRepair';
import {PostCarRepairDto} from '../model/PostCarRepairDto';
import {UpdateStateCarRepairDto} from '../model/UpdateStateCarRepairDto';
import {UpdateStateCarRepairForStartWorkDto} from '../model/UpdateStateCarRepairForStartWorkDto';

/**
* CarRepairs service.
* @module api/CarRepairsApi
* @version v1
*/
export class CarRepairsApi {

    /**
    * Constructs a new CarRepairsApi. 
    * @alias module:api/CarRepairsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiCarrepairsCancelPut operation.
     * @callback moduleapi/CarRepairsApi~apiCarrepairsCancelPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateStateCarRepairDto} opts.body 
     * @param {module:api/CarRepairsApi~apiCarrepairsCancelPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiCarrepairsCancelPut(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/carrepairs/cancel', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiCarrepairsEmployeeGet operation.
     * @callback moduleapi/CarRepairsApi~apiCarrepairsEmployeeGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CarRepair>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.email 
     * @param {module:api/CarRepairsApi~apiCarrepairsEmployeeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiCarrepairsEmployeeGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'email': opts['email']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [CarRepair];

      return this.apiClient.callApi(
        '/api/carrepairs/employee', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiCarrepairsEndWorkPut operation.
     * @callback moduleapi/CarRepairsApi~apiCarrepairsEndWorkPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateStateCarRepairDto} opts.body 
     * @param {module:api/CarRepairsApi~apiCarrepairsEndWorkPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiCarrepairsEndWorkPut(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/carrepairs/endWork', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiCarrepairsPost operation.
     * @callback moduleapi/CarRepairsApi~apiCarrepairsPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/PostCarRepairDto} opts.body 
     * @param {module:api/CarRepairsApi~apiCarrepairsPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiCarrepairsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/carrepairs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiCarrepairsStartWorkPut operation.
     * @callback moduleapi/CarRepairsApi~apiCarrepairsStartWorkPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateStateCarRepairForStartWorkDto} opts.body 
     * @param {module:api/CarRepairsApi~apiCarrepairsStartWorkPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiCarrepairsStartWorkPut(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/carrepairs/startWork', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiCarrepairsUserGet operation.
     * @callback moduleapi/CarRepairsApi~apiCarrepairsUserGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CarRepair>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} opts.email 
     * @param {module:api/CarRepairsApi~apiCarrepairsUserGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiCarrepairsUserGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'email': opts['email']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [CarRepair];

      return this.apiClient.callApi(
        '/api/carrepairs/user', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}